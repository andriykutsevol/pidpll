% *** модель PLL для m50 ***
% *** пропорциональный усилитель ***

clear all;

T = 700; %длительность моделирования
dp_ref_noise = 25.0e-9; %[сек]  - амплитуда случайных колебаний фазы опрного сигнала
tt = 100.0e-3;  %[сек] - максимальная случайная задержка выдачи управляющего напряжения на VCO  

%параметры  компонентов
kf = 2.0e-7;  % [1/В]коэффициент преобразования напряжения в отклонение частоты VCO
kv = 5.0e+6;   % [В/сек] коэффициент преобразования отклонения фазы в управляющее напряжение
              % выбран так, чтобы отклонение фазы за секунду
              % компенсировалось полностью
              % для компенсации отклонения в 1е-9 сек - надо изменить частоту на 1е-9
              % тогда k= kv*kf = 1; kv = 1/kf = 1/2.0e-7 = 5e+6 
k = kv * kf;    % =1 - коэффициент передачи разность фаз [сек] - управл. напряжение [В] - отклонение частоты относительное []  

%праметры управления
a = 1.5;        % [] коэффициент усиления пропорционального усилителя

%начальные значения
df_ref = 0;   % [Гц] отклонение частоты опорного сигнала от идеального сигнала 1Гц
dp_ref = 0;   % [сек] отклонение фазы опорного сигнала от идеального сигнала 1Гц
df_vco = 0;   % [Гц] отклонение частоты генератора от идеального сигнала 1Гц
dp_vco = 0;   % [сек] отклонение фазы генератора от идеального сигнала 1Гц
x = dp_ref - dp_vco;

time = 1:T;    % массив отсчетов времени
dphase = 1:T;  % массив отчетов разности фаз
dfreq = 1:T;  % массив отчетов разности частот

alpha = 3.0e-2;         % коэффициэнт усилителя.
beta = alpha / 16;      % коэффициэнт усилителя.
gamma = beta;

c = [ 0 0 ];
z = 0;
x = [ 0 0 0 ];
y = [ 0 0 ];

sigma_ref = 68e-9       % измерянное осцилографом

%моделирование
for t = 1:T   % время  [sec]
    %начало секунды
    %y = x * a;          % управляющее напряжение VCO 
    
    % ---------- Фильтр -----------
     
     %c(2) = beta * x(1) + c(1);
     %y(2) = alpha * x(1) + c(2);          % управляющее напряжение VCO 
     %c(1) = c(2);
     
    %---------------------------------
    % ПИД регулятор.
    
    y(2) = (alpha + beta + gamma)*x(3) - (alpha + 2*gamma)*x(2) + gamma*x(3) + y(1);
    %y(2) = (alpha + beta)*x(1) - alpha*x(2) + y(1);
    y(1) = y(2);
    
    
    df_vco = k * y(2);     % установлено новое отклонение частоты
    dp_ref = dp_ref + df_ref; %+ normrnd(0, sigma_ref);  % набег фазы опорного сигнала за 1 сек из-за отклонения частоты
    dp_ref = dp_ref + df_ref; % + unifrnd(-dp_ref_noise, +dp_ref_noise);  % набег фазы опорного сигнала за 1 сек из-за отклонения частоты     
    dp_vco = dp_vco + df_vco; % * (1 - unifrnd(0, tt));  % набег фазы генератора за 1 сек из-за отклонения частоты 
    % в конце секунды 
    z =  dp_ref - dp_vco;       % фазовый детектор запоминает разность фаз в сек для следующей секунды вычислений

% Условие на знак разности фаз закомментировано

    % Условие на знак разности фаз.
%    if z < 0
%         x = [x(2:end) x(3)]      % Конкаттерация вектора. В начало добавляем предидущий элемент
%         dphase(t) = x(1);
%    else
          x = [x(2:end) z]         % Конкаттенация вектора. В начало добавляем вновь вычисленный элемент.
          dphase(t) = z;
%    end
    
    dfreq(t)=df_ref - df_vco;
   
    if t >= 5
        df_ref = 1.0e-7; % скачок частоты на 10-й секунде
    else
    end 
end

%вывод результатов
figure(2);
hold off;
plot(time, dphase, 'r');  % ошибка по фазе - красная 
hold on;
plot(time, dfreq,'b');  % ошибка по частоте - синяя










