%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 3.13.0-35-generic #62-Ubuntu SMP Fri Aug 15 01:58:42 UTC 2014 x86_64.
%%Title: /media/HLAM/Workspaces/Metrotek/PPL/MatLab/MatLab/pid/graphs/p_first_instab.eps
%%CreationDate: 01/27/2015  13:19:43
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -342   103   938   738
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -342   103   938   738
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -4104 8856 csm

    0     0 15361  7616 rc
94 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 15362 7617 rf
6 w
0 6207 11905 0 0 -6207 1997 6778 4 MP
PP
-11905 0 0 6207 11905 0 0 -6207 1997 6778 5 MP stroke
4 w
DO
SO
6 w
0 sg
1997 6778 mt 13902 6778 L
1997 6778 mt 1997  571 L
1997 6778 mt 1997 6658 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1964 6923 mt 
(0) s
3187 6778 mt 3187 6658 L
3154 6923 mt 
(5) s
4378 6778 mt 4378 6658 L
4312 6923 mt 
(10) s
5568 6778 mt 5568 6658 L
5502 6923 mt 
(15) s
6759 6778 mt 6759 6658 L
6693 6923 mt 
(20) s
7949 6778 mt 7949 6658 L
7883 6923 mt 
(25) s
9140 6778 mt 9140 6658 L
9074 6923 mt 
(30) s
10330 6778 mt 10330 6658 L
10264 6923 mt 
(35) s
11521 6778 mt 11521 6658 L
11455 6923 mt 
(40) s
12711 6778 mt 12711 6658 L
12645 6923 mt 
(45) s
13902 6778 mt 13902 6658 L
13836 6923 mt 
(50) s
1997 6778 mt 2116 6778 L
1826 6822 mt 
(-5) s
1997 5536 mt 2116 5536 L
1896 5580 mt 
(0) s
1997 4295 mt 2116 4295 L
1896 4339 mt 
(5) s
1997 3053 mt 2116 3053 L
1829 3097 mt 
(10) s
1997 1812 mt 2116 1812 L
1829 1856 mt 
(15) s
1997  571 mt 2116  571 L
1829  615 mt 
(20) s
1997  517 mt 
(x 10) s
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 80 FMSR

2223  443 mt 
(-8) s
gs 1997 571 11906 6208 rc
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 -1 238 -1 238 -2 239 -5 238 -10 
238 -19 238 -39 238 -78 238 -155 238 -310 238 -621 238 -1241 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 1 238 0 238 1 238 3 239 5 238 9 
238 20 238 38 238 78 238 155 238 311 238 620 238 1242 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c9 { 0.900000 0.000000 0.100000 sr} bdef
c9
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 -1 239 0 238 -2 
238 -4 238 -10 238 -25 238 -64 238 -159 238 -397 238 -993 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 1 239 1 238 2 
238 6 238 15 238 38 238 96 238 238 238 596 238 1490 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c10 { 0.800000 0.000000 0.200000 sr} bdef
c10
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 -1 238 -2 238 -6 238 -20 238 -67 238 -223 238 -745 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 2 238 4 238 14 238 47 238 156 238 522 238 1738 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c11 { 0.700000 0.000000 0.300000 sr} bdef
c11
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 -1 238 -4 238 -19 238 -100 238 -496 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 1 238 3 238 16 238 79 238 397 238 1987 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c12 { 0.600000 0.000000 0.400000 sr} bdef
c12
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 -1 238 -2 238 -25 238 -248 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 2 238 23 238 223 238 2235 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c13 { 0.500000 0.000000 0.500000 sr} bdef
c13
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 238 0 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 238 2483 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c14 { 0.400000 0.000000 0.600000 sr} bdef
c14
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 0 238 2 238 -25 238 249 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 0 238 -3 238 28 238 -273 238 2731 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c15 { 0.300000 0.000000 0.700000 sr} bdef
c15
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 0 238 1 238 -4 238 19 238 -99 238 497 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 -1 238 5 238 -24 238 119 238 -596 238 2980 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c16 { 0.200000 0.000000 0.800000 sr} bdef
c16
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 0 
238 0 238 -2 238 6 238 -20 238 67 238 -223 238 745 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 0 238 -1 
238 3 238 -8 238 26 238 -87 238 290 238 -968 238 3228 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c17 { 0.100000 0.000000 0.900000 sr} bdef
c17
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 0 239 1 238 -2 
238 4 238 -10 238 25 238 -63 238 159 238 -397 238 993 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 0 238 -1 239 3 238 -6 
238 14 238 -36 238 89 238 -222 238 556 238 -1390 238 3476 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
/c18 { 0.000000 0.000000 1.000000 sr} bdef
c18
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 238 1 238 -3 239 5 238 -9 
238 19 238 -39 238 78 238 -155 238 310 238 -621 238 1242 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 239 0 238 0 238 0 238 0 238 0 238 0 
238 0 238 0 238 0 238 0 239 0 238 0 238 0 238 0 
238 0 238 0 238 1 238 -2 238 3 238 -7 239 15 238 -29 
238 58 238 -117 238 233 238 -465 238 931 238 -1863 238 3725 238 -2483 
239 0 238 0 238 0 238 0 238 0 238 0 238 0 238 0 
238 0 2235 5536 50 MP stroke
gr

c18

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
